const Upload = require("../Models/User");
const fs = require("fs");
const path = require("path");
const csv = require("fast-csv");
const User = require("../Models/User");

exports.create = async (req, res) => {
  console.log(req.file);
  
  const allRecords = [];

  try {
    fs.createReadStream(
      path.join(__dirname, "../", "/public/files/" + req.file.filename)
    )
      .pipe(csv.parse({ headers: true }))
      .on("error", (err) => console.log(err))
      .on("data", (row) => {
        allRecords.push(row);
        console.log(row);
      })
      .on("end", async (rowCount) => {
        console.log(`${rowCount} rows has been PARSED`);
        try {
          const users = await User.insertMany(allRecords, { ordered: false });

          res.json({
            message: "Data entered Successfully",
            users,
          });
        } catch (error) {
          return res.status(400).json(error);
        }
      });
  } catch (error) {
    res.status(400).json(error);
  }
};

------------------------------------------------------------------------------------

const express = require("express");
const csvController = require("../controllers/uploadController");
const multer = require("multer");
const fs = require("fs");
const path = require("path");
const XLSX = require("xlsx");

const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    if (!fs.existsSync("public")) {
      fs.mkdirSync("public");
    }

    if (!fs.existsSync("public/files")) {
      fs.mkdirSync("public/files");
    }

    cb(null, "public/files");
  },
  filename: function (req, file, cb) {
    console.log(file);
    cb(null, Date.now() + file.originalname);
  },
});

const upload = multer({
  storage: storage,
  fileFilter: function (req, file, cb) {
    const ext = path.extname(file.originalname);
    if (ext != ".csv") {
      return cb(new Error("Only .csv are allowd"));
    }

    cb(null, true);
  },
});

const router = express.Router();

router.post("/create", upload.single("uploads"), csvController.create);

module.exports = router;

-------------------------------------------------------------------------------

const mongoose = require("mongoose");

const UploadSchema = mongoose.Schema(
  {
    Name: {
      type: String,
      unique: true,
      required: true,
    },
    Subject: {
      type: String,
      required: true,
    },
    Roll_no: {
      type: Number,
      required: true,
    },
  },
  {
    timestamp: true,
  }
);

module.exports = Upload = mongoose.model("Upload", UploadSchema);

-----------------------------------------------------------------------------
const express = require("express");
const port = process.env.PORT || 5000;
const mongoose = require("mongoose");
const router = require("./routes/uploadRoute");
const path = require("path");

const app = express();

mongoose.connect(
  "mongodb+srv://Zeel:QIc0bdPhwNL5D61O@cluster0.jth7caz.mongodb.net/csv?retryWrites=true&w=majority"
);

app.use("/", router);

app.listen(port, () => console.log(`Server started on ${port}`));
//Zeel
//QIc0bdPhwNL5D61O
---------------------------------------------------